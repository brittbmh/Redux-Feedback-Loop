{"version":3,"sources":["components/Header/Header.js","components/Review/Review.js","components/Feelings/Feelings.js","components/Understanding/Understanding.js","components/Support/Support.js","components/Comments/Comments.js","components/FinalReview/FinalReview.js","components/Success/Success.js","components/Admin/Admin.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Review","postFeedback","event","feedback","_this","props","reduxStore","feedbackReview","console","log","preventDefault","axios","post","then","response","dispatch","type","history","push","catch","error","buttonSwitch","this","location","pathname","Button_default","variant","color","margin","onClick","disabled","Feelings","Understanding","Support","Comments","withRouter","connect","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeFeelings","setState","feelings","target","value","sendFeelings","action","payload","state","TextField_default","id","select","label","onChange","helperText","MenuItem_default","components_Review_Review","changeUnderstanding","understanding","sendUnderstanding","changeSupport","support","sendSupport","size","changeComments","comments","sendComments","InputLabelProps","shrink","style","fullWidth","FinalReview","Success","src","title","width","height","frameBorder","allowFullScreen","href","Admin","getFeedback","get","data","rowDelete","swal","text","icon","buttons","willDelete","delete","concat","_this2","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","data-id","feeling","date","withStyles","theme","root","marginTop","spacing","unit","overflowX","table","minWidth","App","components_Header_Header","HashRouter","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","defaultFeedback","storeInstance","createStore","combineReducers","arguments","length","undefined","objectSpread","applyMiddleware","logger","ReactDOM","render","es","store","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.65aa3df4.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n    render () {\n        return (\n            <header className=\"App-header\">\n                <h1 className=\"App-title\">Feedback!</h1>\n                <h4><i>Don't forget it!</i></h4>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Review.css';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nclass Review extends Component {\n    //send Feedback to database and move to Success page\n    postFeedback = (event) => {\n        const feedback = this.props.reduxStore.feedbackReview;\n        console.log(feedback);\n        event.preventDefault();\n        axios.post('/api/feedback', feedback)\n            .then((response) => {\n                console.log(response);\n                const action = { type: 'CLEAR_FEEDBACK' };\n                this.props.dispatch(action);\n                this.props.history.push('/Success');\n            }).catch((error) => {\n                console.log(error);\n            })\n    }\n\n    // display current ratings entered at bottom of input pages\n    render() {\n        let buttonSwitch;\n        if (this.props.location.pathname === '/FinalReview'){\n            buttonSwitch = <Button variant=\"contained\" color=\"primary\" margin=\"theme.spacing.unit\" className=\"button\" onClick={this.postFeedback}>Submit</Button>\n        } else {\n            buttonSwitch = <Button variant=\"contained\" color=\"secondary\" disabled margin=\"theme.spacing.unit\" className=\"button\" onClick={this.postFeedback}>Incomplete</Button>\n        };\n        \n        const feedback = this.props.reduxStore.feedbackReview;\n        return (\n            <div className=\"review\">\n                <h3>Review Your Feedback</h3>\n                <p>Feelings: {feedback.Feelings} </p>\n                <p>Understanding: {feedback.Understanding}</p>\n                <p>Support: {feedback.Support}</p>\n                <p>Comments: {feedback.Comments}</p>\n                {buttonSwitch}\n            </div>\n        )\n    }\n}\n\nconst mapReduxStoreToProps = (reduxStore) => ({\n    reduxStore\n})\n\nexport default withRouter(connect(mapReduxStoreToProps)(Review));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Review from './../Review/Review.js';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass Feelings extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feelings: 0\n        }\n    }\n\n    //update state to capture input\n    changeFeelings = (event) => {\n        this.setState({\n            feelings: event.target.value\n        });\n    }\n\n    //update Store with feelings rating\n    sendFeelings = (event) => {\n        event.preventDefault();\n        const feelings = this.state.feelings;\n        const action = { type: 'UPDATE_FEELINGS', payload: feelings };\n        this.props.dispatch(action);\n        this.props.history.push('/Understanding');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"feedbackDiv\">\n                    <h3>How are you feeling today?</h3>\n                    {/* <input type=\"text\" onChange={this.changeFeelings} placeholder=\"enter 1-5\" /> */}\n                    <TextField\n                        id=\"outlined-select-rating\"\n                        select\n                        label=\"1 to 5\"\n                        className=\"textField\"\n                        value={this.state.feelings}\n                        onChange={this.changeFeelings}\n                        helperText=\"Enter Rating\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value=\"1\">1</MenuItem>\n                        <MenuItem value=\"2\">2</MenuItem>\n                        <MenuItem value=\"3\">3</MenuItem>\n                        <MenuItem value=\"4\">4</MenuItem>\n                        <MenuItem value=\"5\">5</MenuItem>\n                    </TextField>\n                    <br />\n                    <br />\n                    <Button variant=\"contained\" color=\"primary\" margin=\"theme.spacing.unit\" className=\"button\" onClick={this.sendFeelings}>Next</Button>\n                </div>\n                <br />\n                <Review />\n            </div>\n        )\n    }\n}\n\nexport default connect()(Feelings);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Review from './../Review/Review.js';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nclass Understanding extends Component {\n    constructor() {\n        super();\n        this.state = {\n            understanding: 0\n        }\n    }\n\n    //update state to capture input\n    changeUnderstanding = (event) => {\n        this.setState({\n            understanding: event.target.value\n        });\n    }\n\n    //update Store with feelings rating\n    sendUnderstanding = (event) => {\n        event.preventDefault();\n        const understanding = this.state.understanding;\n        const action = { type: 'UPDATE_UNDER', payload: understanding };\n        this.props.dispatch(action);\n        this.props.history.push('/Support');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"feedbackDiv\">\n                    <h3>How well are you understanding the content?</h3>\n                    <TextField\n                        id=\"outlined-select-rating\"\n                        select\n                        label=\"1 to 5\"\n                        className=\"textField\"\n                        value={this.state.understanding}\n                        onChange={this.changeUnderstanding}\n                        helperText=\"Enter Rating\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value=\"1\">1</MenuItem>\n                        <MenuItem value=\"2\">2</MenuItem>\n                        <MenuItem value=\"3\">3</MenuItem>\n                        <MenuItem value=\"4\">4</MenuItem>\n                        <MenuItem value=\"5\">5</MenuItem>\n                    </TextField>\n                    <br />\n                    <br />\n                    <Button variant=\"contained\" color=\"primary\" margin=\"theme.spacing.unit\" className=\"button\"  onClick={this.sendUnderstanding}>Next</Button>\n                </div>\n                <br />\n                <Review />\n            </div >\n        )\n    }\n}\n\nexport default connect()(Understanding);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Review from './../Review/Review.js';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nclass Support extends Component {\n    constructor() {\n        super();\n        this.state = {\n            understanding: 0\n        }\n    }\n\n    //update state to capture input\n    changeSupport = (event) => {\n        this.setState({\n            support: event.target.value\n        });\n    }\n\n    //update Store with feelings rating\n    sendSupport = (event) => {\n        event.preventDefault();\n        const support = this.state.support;\n        const action = { type: 'UPDATE_SUPPORT', payload: support };\n        this.props.dispatch(action);\n        this.props.history.push('/Comments');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"feedbackDiv\">\n                    <h3>How well are you being supported?</h3>\n                    {/* <input type=\"text\" onChange={this.changeSupport} placeholder=\"enter 1-5\" /> */}\n                    <TextField\n                        id=\"outlined-select-rating\"\n                        select\n                        label=\"1 to 5\"\n                        className=\"textField\"\n                        value={this.state.support}\n                        onChange={this.changeSupport}\n                        helperText=\"Enter Rating\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value=\"1\">1</MenuItem>\n                        <MenuItem value=\"2\">2</MenuItem>\n                        <MenuItem value=\"3\">3</MenuItem>\n                        <MenuItem value=\"4\">4</MenuItem>\n                        <MenuItem value=\"5\">5</MenuItem>\n                    </TextField>\n                    <br />\n                    <br />\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" margin=\"theme.spacing.unit\" className=\"button\"  onClick={this.sendSupport}>Next</Button>\n                </div>\n                <br />\n                <Review />\n            </div >\n        )\n    }\n}\n\nexport default connect()(Support);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Review from './../Review/Review.js';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nclass Comments extends Component {\n    constructor() {\n        super();\n        this.state = {\n            comments: ''\n        }\n    }\n\n    //update state to capture input\n    changeComments = (event) => {\n        this.setState({\n            comments: event.target.value\n        });\n    }\n\n    //update Store with feelings rating\n    sendComments = (event) => {\n        event.preventDefault();\n        const comments = this.state.comments;\n        const action = { type: 'UPDATE_COMMENT', payload: comments };\n        this.props.dispatch(action);\n        this.props.history.push('/FinalReview');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"feedbackDiv\">\n                    <h3>Any additional comments?</h3>\n                    <TextField id=\"standard-full-width\" InputLabelProps={{\n                        shrink: true,\n                    }} style={{ margin: 0 }} fullWidth label=\"Comment\" value={this.state.comments} margin=\"normal\" type=\"text\" onChange={this.changeComments} />\n                    <br />\n                    <br />\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" margin=\"theme.spacing.unit\" className=\"button\" onClick={this.sendComments}>Next</Button>\n                </div>\n                <br />\n                <Review />\n            </div >\n        )\n    }\n}\n\nexport default connect()(Comments);","import React, { Component } from 'react';\nimport Review from './../Review/Review.js';\n\n//final review page for submit\nclass FinalReview extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Please review your answers and click submit.</h2>\n                <Review />\n            </div>\n        )\n    }\n}\n\nexport default FinalReview;","import React, { Component } from 'react';\n\n//page appears after submit\nclass Success extends Component {\n    render() {\n        return (\n            <div>\n                <h1>SUCCESS!</h1>\n                <br />\n                <iframe src=\"https://giphy.com/embed/xNBcChLQt7s9a\" title=\"30Rock Success Gif\" width=\"240\" height=\"240\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe> <p><a href=\"https://giphy.com/gifs/win-xNBcChLQt7s9a\">via GIPHY</a></p>\n            </div>\n        )\n    }\n}\n\nexport default Success;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport swal from 'sweetalert';\n\n//for material ui table\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feedback: []\n        }\n    }\n\n    componentDidMount() {\n        this.getFeedback();\n    }\n\n    //initial get of feedback from database for admin page\n    getFeedback = () => {\n        axios.get('/api/feedback').then((response) => {\n            console.log(response);\n            this.setState({\n                feedback: response.data\n            })\n        }).catch((error) => {\n            console.log('Error in GET', error);\n        })\n    }\n\n    //function to delete feedback with alert to confirm\n    rowDelete = (event) => {\n        console.log(event);\n        swal({\n            title: 'Please confirm delete.',\n            text: \"Press OK to delete feedback\",\n            icon: \"warning\",\n            buttons: true,\n        }).then((willDelete) => {\n            if (willDelete) {\n                axios.delete(`/api/feedback/${event}`).then((response) => {\n                    swal(\"feedback deleted\", { icon: \"success\" })\n                    this.getFeedback();\n                }).catch((error) => {\n                    console.log(error);\n                })\n            } else {\n                swal(\"feedback saved\")\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Admin</h2>\n                <p>Click row to delete feedback</p>\n                <Paper className=\"root\">\n                    <Table className=\"table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Feelings</TableCell>\n                                <TableCell align=\"center\">Understanding</TableCell>\n                                <TableCell align=\"center\">Support</TableCell>\n                                <TableCell align=\"center\">Comments</TableCell>\n                                <TableCell align=\"center\">Date</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.feedback.map(row => (\n                                <TableRow key={row.id} onClick={event => this.rowDelete(row.id)} data-id={row.id}>\n                                    <TableCell align=\"center\">{row.feeling}</TableCell>\n                                    <TableCell align=\"center\">{row.understanding}</TableCell>\n                                    <TableCell align=\"center\">{row.support}</TableCell>\n                                    <TableCell align=\"center\">{row.comments}</TableCell>\n                                    <TableCell align=\"center\">{row.date}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        )\n    }\n}\n\n\n\nexport default withStyles(styles)(Admin);","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './../Header/Header.js';\nimport Feelings from './../Feelings/Feelings.js';\nimport Understanding from './../Understanding/Understanding.js';\nimport Support from './../Support/Support.js';\nimport Comments from './../Comments/Comments.js';\nimport FinalReview from './../FinalReview/FinalReview.js';\nimport Success from './../Success/Success.js';\nimport Admin from './../Admin/Admin.js';\nimport {HashRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <br/>\n        <Router>\n          <div>\n            <Route exact path='/' component={Feelings}/>\n            <Route exact path='/Understanding' component={Understanding} />\n            <Route exact path='/Support' component={Support} />\n            <Route exact path='/Comments' component={Comments} />\n            <Route exact path='/FinalReview' component={FinalReview} />\n            <Route exact path='/Success' component={Success} />\n            <Route exact path='/Admin' component={Admin} />\n          </div>\n        </Router>\n        <br /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport logger from 'redux-logger';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n\nconst defaultFeedback = {\n    Feelings: 0,\n    Understanding: 0,\n    Support: 0,\n    Comments: ''\n}\n\n//each page will send a different input to reduxStore; clicking submit will clear it\nconst feedbackReview = (state = defaultFeedback, action) => {\n    if (action.type === 'UPDATE_FEELINGS'){\n        return {...state, Feelings: action.payload};\n    } else if (action.type === 'UPDATE_UNDER'){\n        return {...state, Understanding: action.payload};\n    } else if (action.type === 'UPDATE_SUPPORT'){\n        return { ...state, Support: action.payload}\n    } else if (action.type === 'UPDATE_COMMENT'){\n        return {...state, Comments: action.payload}\n    } else if (action.type === 'CLEAR_FEEDBACK'){\n        return defaultFeedback;\n    }\n    return state;\n}\n\nconst storeInstance = createStore(\n    combineReducers({\n        feedbackReview\n    }),\n    applyMiddleware(logger),\n);\n\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}